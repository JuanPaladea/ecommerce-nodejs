openapi: 3.0.0
info:
  title: E-commerce API
  version: 1.0.0
  description: This is a sample server for an e-commerce API.

tags:
  - name: carts
    description: Operations about carts

paths:
  /api/carts:
    get:
      tags:
        - carts
      summary: Get cart
      description: Get the cart
      operationId: getCart
      responses:
        '200':
          description: The cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    post:
      tags:
        - carts
      summary: Add product to cart
      description: Add a product to the cart
      operationId: addProductToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  description: The product ID
                quantity:
                  type: integer
                  description: The quantity of the product
      responses:
        '200':
          description: Product added to cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    put: 
      tags:
        - carts
      summary: Update product in cart
      description: Update a product in the cart
      operationId: updateProductInCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  description: The product ID
                quantity:
                  type: integer
                  description: The quantity of the product
      responses:
        '200':
          description: Product updated in cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    delete:
      tags:
        - carts
      summary: Remove all products from cart
      description: Remove all products from the cart
      operationId: removeAllProductsFromCart
      responses:
        '200':
          description: Products removed from cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
  /api/carts/{productId}:
    delete:
      tags:
        - carts
      summary: Remove product from cart
      description: Remove a product from the cart
      operationId: removeProductFromCart
      parameters:
        - name: productId
          in: path
          description: The product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product removed from cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

components: 
  schemas:
    Cart:
      type: object
      properties:
        userId:
          type: string
          description: The user ID
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: The product ID
              quantity:
                type: integer
                description: The quantity of the product
              price:
                type: number
                description: The price of the product
              addedAt:
                type: string
                format: date-time
                description: The date and time the product was added to the cart
        totalAmount:
          type: number
          description: The total amount of the cart
        status:
          type: string
          description: The status of the cart
