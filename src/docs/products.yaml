openapi: 3.0.0
info:
  title: E-commerce API
  version: 1.0.0
  description: This is a sample server for an e-commerce API.

tags:
  - name: products
    description: Operations about products

paths:
  /api/products:
    get:
      tags:
        - products
      summary: List all products
      operationId: listProducts
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - products
      summary: Create a new product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/products/{productId}:
    get:
      tags:
        - products
      summary: Get a product by ID
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to get
      responses:
        '200':
          description: A product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
        - products
      summary: Update a product
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBody'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      tags:
        - products
      summary: Delete a product
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        sku:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        category:
          type: string
        brand:
          type: string
        tags:
          type: array
          items:
            type: string
        price:
          type: number
        stock:
          type: number
        isAvailable:
          type: boolean
        images:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProductBody:
      type: object
      properties:
        sku:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        category:
          type: string
        brand:
          type: string
        tags:
          type: array
          items:
            type: string
        price:
          type: number
        stock:
          type: number
        isAvailable:
          type: boolean
        images:
          type: array
          items:
            type: string